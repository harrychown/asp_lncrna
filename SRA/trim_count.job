#!/bin/bash --login
#$ -cwd
#$ -N count_trim
#$ -t 1-54
#$ -pe smp.pe 6


R1_full=`awk "NR==$SGE_TASK_ID" forward_reads.txt`

module load apps/binapps/anaconda3/2020.07
module load tools/env/proxy2 

### EXTRACT CONDITION AND PATH ###
CONDITION=$(echo $R1_full | sed 's/.*lncrna\///g' | cut -d"/" -f1)
R1=$(echo $R1_full | rev | cut -d"/" -f1 | rev)
R2=$(echo $R1 | sed 's/_1/_2/g')
DIR=$(echo $R1_full | sed 's/SRR.*//g')
PREFIX=$(echo $R1 | cut -d"_" -f1)

cd $DIR

conda activate lncrna
# Conditional for paired-end reads/strandedness (we know that the unpaired reads are also unstranded)
if [ -e $R2 ]
then
	# Trim
	bbduk.sh threads=$NSLOTS in1=$R1 in2=$R2 out1=$PREFIX"_q20_QC_R1".fastq out2=$PREFIX"_q20_QC_R2".fastq ref=~/anaconda3/opt/bbmap-38.87-0/resources/adapters.fa qtrim=rl trimq=20 maq=25 minlen=50 trimpolya=5 2>$PREFIX.out
	# Align 
	hisat2 -x ~/scratch/lncrna/hisat2_a1163_indexes/a1163 -p $NSLOTS --phred33 --max-intronlen 5000 -1 $PREFIX"_q20_QC_R1".fastq -2 $PREFIX"_q20_QC_R2".fastq -S $PREFIX.bam
	# Sort
	samtools sort -@ $NSLOTS -o $PREFIX.sorted.bam -n $PREFIX.bam
	# Count
	conda activate htseq_env
	htseq-count -s yes -m intersection-strict -i transcript_id --nonunique all -f bam $PREFIX.sorted.bam ~/scratch/lncrna/lncRNA_v11.4_merged.gtf 1>"$PREFIX".counts
	
else
	# Trim
	bbduk.sh threads=$NSLOTS in=$R1 out=$PREFIX"_q20_QC".fastq ref=~/anaconda3/opt/bbmap-38.87-0/resources/adapters.fa qtrim=rl trimq=20 maq=25 minlen=50 trimpolya=5 2>$PREFIX.out
	# Align
	hisat2 -x ~/scratch/lncrna/hisat2_a1163_indexes/a1163 -p $NSLOTS --phred33 --max-intronlen 5000 -U $PREFIX"_q20_QC".fastq -S $PREFIX.bam
	# Sort
	samtools sort -@ $NSLOTS -o $PREFIX.sorted.bam -n $PREFIX.bam
	# Count
	conda activate htseq_env
	htseq-count -s no -m intersection-strict -i transcript_id --nonunique all -f bam $PREFIX.sorted.bam ~/scratch/lncrna/lncRNA_v11.4_merged.gtf 1>"$PREFIX".counts
fi







